name: Validate Pull Request

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  validate-contributor-pr:
    if: contains(github.event.pull_request.title, 'contributor') || contains(github.event.pull_request.title, 'Add')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v39
        with:
          files: contributors/*.json

      - name: Validate contributor submission
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          echo "üîç Validating contributor submission..."
          
          # Get the list of changed files
          changed_files="${{ steps.changed-files.outputs.all_changed_files }}"
          
          echo "Changed files: $changed_files"
          
          # Count number of changed files
          file_count=$(echo "$changed_files" | wc -w)
          
          if [ "$file_count" -gt 1 ]; then
            echo "‚ùå ERROR: Please only add ONE contributor file per PR"
            echo "   You've changed $file_count files: $changed_files"
            echo "   Create separate PRs for each contributor."
            exit 1
          fi
          
          # Validate the single file
          for file in $changed_files; do
            echo "Validating $file..."
            
            # Check if it's a JSON file in contributors directory
            if [[ ! "$file" =~ ^contributors/[^/]+\.json$ ]]; then
              echo "‚ùå ERROR: Invalid file location. Must be contributors/username.json"
              exit 1
            fi
            
            # Extract filename without path and extension
            filename=$(basename "$file" .json)
            
            # Validate JSON structure
            python3 -c "
import json
import sys

try:
    with open('$file', 'r') as f:
        data = json.load(f)
    
    required_fields = ['name', 'github', 'contributions', 'profile']
    missing_fields = [field for field in required_fields if field not in data or not data[field]]
    
    if missing_fields:
        print(f'‚ùå ERROR: Missing required fields: {missing_fields}')
        sys.exit(1)
    
    # Check if filename matches github username
    if data['github'] != '$filename':
        print(f'‚ùå ERROR: Filename must match GitHub username')
        print(f'   File: $filename.json')
        print(f'   GitHub username in file: {data[\"github\"]}')
        print(f'   Should be: {data[\"github\"]}.json')
        sys.exit(1)
    
    print('‚úÖ Contributor file is valid!')
    
except json.JSONDecodeError as e:
    print(f'‚ùå ERROR: Invalid JSON format: {e}')
    sys.exit(1)
except Exception as e:
    print(f'‚ùå ERROR: {e}')
    sys.exit(1)
" || exit 1
          done
          
          echo "‚úÖ All validations passed!"

      - name: Welcome comment for new contributors
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const changedFiles = '${{ steps.changed-files.outputs.all_changed_files }}';
            
            if (changedFiles.trim()) {
              const comment = `üéâ **Welcome to the guestbook!**
              
              Thank you for contributing! Your submission looks good and follows the new conflict-free process.
              
              Once this PR is merged:
              - ‚úÖ You'll be automatically added to the contributors list in the README
              - üéì You can continue with the next step in the [Intro to Open Source course](https://opensauced.pizza/learn/intro-to-oss/)
              - üåü Consider creating a [highlight](https://app.opensauced.pizza/feed) of your contribution!
              
              **What happens next?**
              - A maintainer will review your PR
              - After merge, a GitHub Action will automatically update the README
              - You'll see your profile appear in the contributors section!
              
              Thanks for being part of the open source community! üöÄ`;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }